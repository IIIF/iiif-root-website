# This is a basic workflow to help you get started with Actions

name: Deploy-preview

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
    push:
        branches:
          - '*'
          - '!master'
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    # store branch name in ${BRANCH_NAME}
    - uses: nelonoel/branch-name@v1

    - name: Setup ruby
      uses: actions/setup-ruby@v1
      with:
        ruby-version: '2.7.1'
    - run: gem install bundler  

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems0-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-0

    - name: Install dependencies
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
    - name: Test site
      run: bundle exec rake ci

    # Build jekyll site
    - name: Build Jekyll
      run: bundle exec jekyll clean && bundle exec jekyll build --baseurl /root/${{ env.BRANCH_NAME}}

    # Deploy to Preview site
    - name: Create GitHub deployment
      uses: glenrobson/deployments@v0.4.2
      id: deployment
      with:
        step: start
        token: ${{ secrets.GITHUB_TOKEN }}
        auto_inactive: 'false'
        env: staging

    - name: Deploy to S3
      uses: glenrobson/s3-sync-action@v0.5.1
      with:
        args: --acl public-read 
      env:
        AWS_S3_BUCKET: "preview.iiif.io"
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        SOURCE_DIR: "_site"
        DEST_DIR: "root/${BRANCH_NAME}"
    - name: Update deployment status
      uses: glenrobson/deployments@v0.4.2
      if: always()
      with:
        step: finish
        token: ${{ secrets.GITHUB_TOKEN }}
        status: ${{ job.status }}
        auto_inactive: 'false'
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
        env_url: "https://preview.iiif.io/root/${{ env.BRANCH_NAME}}/index.html"
